#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define SYM_L 1
#define NAV_L 2
#define LCK_L 3

&lt { quick_tap_ms = <200>; };

/ {
	combos {
		compatible = "zmk,combos";

		lock {
			timeout-ms = <50>;
			key-positions = <0 4 7 11>;
			bindings = <&tog LCK_L>;
		};

		esc_mo {
			timeout-ms = <50>;
			key-positions = <39 40>;
			bindings = <&kp ESC>;
		};

		del_mo {
			timeout-ms = <50>;
			key-positions = <43 44>;
			bindings = <&kp DEL>;
		};

		// home row one shot mods
		left_shift {
			timeout-ms = <50>;
			key-positions = <39 15>;
			bindings = <&sk LSHFT>;
		};

		left_ctrl {
			timeout-ms = <50>;
			key-positions = <39 14>;
			bindings = <&sk LCTRL>;
		};

		left_alt {
			timeout-ms = <50>;
			key-positions = <39 13>;
			bindings = <&sk LALT>;
		};

		left_gui {
			timeout-ms = <50>;
			key-positions = <39 12>;
			bindings = <&sk LGUI>;
		};

		right_shift {
			timeout-ms = <50>;
			key-positions = <44 20>;
			bindings = <&sk RSHFT>;
		};

		right_ctrl {
			timeout-ms = <50>;
			key-positions = <44 21>;
			bindings = <&sk RCTRL>;
		};

		right_alt {
			timeout-ms = <50>;
			key-positions = <44 22>;
			bindings = <&sk RALT>;
		};

		right_gui {
			timeout-ms = <50>;
			key-positions = <44 23>;
			bindings = <&sk RGUI>;
		};

	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// --------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |     |  Y   |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |     |     |  H   |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |     |     |  N   |  M  |  ,  |  .  |  /  |
// |     |     |     | TAB | SPC |     |     | BSPC | RET |     |     |     |
			bindings = <
	&kp Q   &kp W   &kp E   &kp R    &kp T            &trans  &trans  &kp Y           &kp U    &kp I      &kp O    &kp P
	&kp A   &kp S   &kp D   &kp F    &kp G            &trans  &trans  &kp H           &kp J    &kp K      &kp L    &kp SEMI
	&kp Z   &kp X   &kp C   &kp V    &kp B            &trans  &trans  &kp N           &kp M    &kp COMMA  &kp DOT  &kp SLASH
	&trans  &trans  &trans  &kp TAB  &lt SYM_L SPACE  &trans  &trans  &lt NAV_L BSPC  &kp RET  &trans     &trans   &trans
			>;
		};

		sym_layer {
// --------------------------------------------------------------------------
// |  @  |  &  |  *  |  !  |     |     |     |     |  ~  |  (  |  )  |  "  |
// |  #  |  |  |  +  |  =  |     |     |     |     |  _  |  {  |  }  |  '  |
// |  $  |  %  |  -  |  ^  |     |     |     |     |  \  |  [  |  ]  |  `  |
// |     |     |     |     |     |     |     |     |     |     |     |     |
			bindings = <
	&kp AT    &kp AMPS   &kp STAR   &kp EXCL   &trans  &trans  &trans  &trans  &kp TILDE  &kp LPAR  &kp RPAR  &kp DQT
	&kp HASH  &kp PIPE   &kp PLUS   &kp EQUAL  &trans  &trans  &trans  &trans  &kp UNDER  &kp LBRC  &kp RBRC  &kp SQT
	&kp DLLR  &kp PRCNT  &kp MINUS  &kp CARET  &trans  &trans  &trans  &trans  &kp BSLH   &kp LBKT  &kp RBKT  &kp GRAVE
	&trans    &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans     &trans    &trans    &trans
			>;
		};

		nav_layer {
// --------------------------------------------------------------------------
// | RST |  7  |  8  |  9  |     |     |     | PREV | VDN  | VUP  | NEXT | MUTE |
// |     |  4  |  5  |  6  |  0  |     |     |  <   |  v   |  ^   |  >   | PLAY |
// |     |  1  |  2  |  3  |     |     |     | HOME | PGDN | PGUP | END  |      |
// |     |     |     |     |     |     |     |      |      |      |      |      |
			bindings = <
	&bootloader  &kp N7  &kp N8  &kp N9  &trans  &trans  &trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &kp C_MUTE
	&trans       &kp N4  &kp N5  &kp N6  &kp N0  &trans  &trans  &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &kp C_PP
	&trans       &kp N1  &kp N2  &kp N3  &trans  &trans  &trans  &kp HOME    &kp PG_DN     &kp PG_UP     &kp UP      &trans
	&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans        &trans        &trans      &trans
			>;
		};

		lock_layer {
			bindings = <
	&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  
	&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  
	&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  
	&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  
			>;
		};
	};
};
