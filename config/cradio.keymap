// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer name definitions
#define _DEF 0
#define _NUM 1
#define _NAV 2
#define _FN  3
#define _BLT 4
#define _LCK 5

// This should be default honestly
#define ___ &trans

/ {
	behaviors {
		skl: sticky_key_lazy {
			compatible = "zmk,behavior-sticky-key";
			#binding-cells = <1>;
			bindings = <&kp>;
			release-after-ms = <1000>;
			lazy;
		};

		hskl: hold_sticky_key_lazy {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&kp>, <&skl>;
		};

		td_sf_cp: tap_dance_shift_caps {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			// TODO: behavior is not consistent, look into it
			// we might need to change quick-tap-ms, flavor or tapping-term-ms 
			// of the underlying hskl behavior. I'd bet on the first
			tapping-term-ms = <300>;
			bindings = <&hskl LSHFT LSHFT>, <&kp CAPS>;
		};
	};

    combos {
		compatible = "zmk,combos";

		// // left mod combos
		// left thumb 1, left home index
		combo_lt1_lhi {
			timeout-ms = <50>;
			key-positions = <39 15>;
			bindings = <&td_sf_cp>;
		};

		// left thumb 1, left home middle
		combo_lt1_lhm {
			timeout-ms = <50>;
			key-positions = <39 14>;
			bindings = <&hskl LGUI LGUI>;
		};

		// left thumb 1, left home ring
		combo_lt1_lhr {
			timeout-ms = <50>;
			key-positions = <39 13>;
			bindings = <&hskl LCTRL LCTRL>;
		};

		// left thumb 1, left home pinky
		combo_lt1_lhp {
			timeout-ms = <50>;
			key-positions = <39 12>;
			bindings = <&hskl LALT LALT>;
		};

		// // right mod combos
		// right thumb 1, right home index
		combo_rt1_rhi {
			timeout-ms = <50>;
			key-positions = <44 20>;
			bindings = <&td_sf_cp>;
		};

		// right thumb 1, right home middle
		combo_rt1_rhm {
			timeout-ms = <50>;
			key-positions = <44 21>;
			bindings = <&hskl LGUI LGUI>;
		};

		// right thumb 1, right home ring
		combo_rt1_rhr {
			timeout-ms = <50>;
			key-positions = <44 22>;
			bindings = <&hskl LCTRL LCTRL>;
		};

		// right thumb 1, right home pinky
		combo_rt1_rhp {
			timeout-ms = <50>;
			key-positions = <44 23>;
			bindings = <&hskl LALT LALT>;
		};

		// // layer combos
		// left thumb 0, left thumb 1
		combo_lt0_lt1 {
			timeout-ms = <50>;
			key-positions = <39 40>;
			bindings = <&mo _FN>;
		};

		// blt_c {
		// 	timeout-ms = <50>;
		// 	key-positions = <40 7>;
		// 	bindings = <&mo _BLT>;
		// };

		lock {
			timeout-ms = <50>;
			key-positions = <37 1 40 10>;
			bindings = <&tog _LCK>;
		};
	};


    keymap {
//        P     R     M     I     N             N     I     M     R     P
//      ______________________________        ______________________________  
//  U  | k0  |     |     |     |     | . | . | k7  |     |     |     |     |
//  H  | k12 |     |     |     |     | . | . | k19 |     |     |     |     |
//  L  |_k24_|_____|_____|     |     | . | . | k31 |     |_____|_____|_____|
//  T                    |_k39_|_____| . | . |_k43_|_____|               
//                          1     0             0     1

// //╭───────┬───────┬───────┬───────┬───────╮   ╭───────┬───────┬───────┬───────┬───────╮
// //│  Q    │  W    │  E    │  R    │  T    │   │  Y    │  U    │  I    │  O    │  P    │
// //├───────┼───────┼───────┼───────┼───────┤   ├───────┼───────┼───────┼───────┼───────┤
// //│  A    │  S    │  D    │  F    │  G    │   │  H    │  J    │  K    │  L    │ ' "   │
// //├───────┼───────┼───────┼───────┼───────┤   ├───────┼───────┼───────┼───────┼───────┤
// //│  Z    │  X    │  C    │  V    │  B    │   │  N    │  M    │ , <   │ . >   │ / ?   │
// //╰───────┴───────┴───────┼───────┼───────┤   ├───────┼───────┼───────┴───────┴───────╯
// //                        │  V    │  B    │   │  N    │  M    │
// //                        ╰───────┴───────╯   ╰───────┴───────╯

// //╭─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────╮
// //│  Q  │  W  │  E  │  R  │  T  │   │  Y  │  U  │  I  │  O  │  P  │
// //├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
// //│  A  │  S  │  D  │  F  │  G  │   │  H  │  J  │  K  │  L  │ ' " │
// //├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
// //│  Z  │  X  │  C  │  V  │  B  │   │  N  │  M  │ , < │ . > │ / ? │
// //╰─────┴─────┴─────┼─────┼─────┤   ├─────┼─────┼─────┴─────┴─────╯
// //                  │  V  │  B  │   │  N  │  M  │
// //                  ╰─────┴─────╯   ╰─────┴─────╯


        compatible = "zmk,keymap";
        // default_layer {
        //     bindings = <
        // //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        // //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
        //     &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ ' "      │
        //     HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,         L,        SQT)
        // //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        // //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
        //     &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        // //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                     &lt 2 TAB   &kp ENTER     &kp SPACE  &lt 1 BSPC
        // //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        //     >;
        // };

    };
};
