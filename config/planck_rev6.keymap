#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define _BASE  0
#define _LEFT  1
#define _RIGHT  2
#define _LMOD 3
#define _RMOD 4

&lt { quick_tap_ms = <200>; };

/ {
	keymap {
		compatible = "zmk,keymap";

        base_layer {
// |  Q  |  W  |  E  |  R  |  T  |     |     |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |     |     |  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |     |     |  N  |  M  |  ,  |  .  |  /  |
// |     |     |     | TAB | SPC |     |     | BSP | RET |     |     |     |
        	bindings = <
	&kp Q   &kp W   &kp E  &kp R  &kp T  &trans  &trans  &kp Y  &kp U  &kp I      &kp O    &kp P     
	&kp A   &kp S   &kp D  &kp F  &kp G  &trans  &trans  &kp H  &kp J  &kp K      &kp L    &kp SEMI  
	&kp Z   &kp X   &kp C  &kp V  &kp B  &trans  &trans  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  
    &trans  &trans  &trans &lt _LMOD TAB  &lt _LEFT SPACE   &trans  &trans &lt _RIGHT BSPC  &lt _RMOD RET  &trans &trans  &trans
        	>;
        };
		
        left_layer {
// | RST |  1  |  2  |  3  | CPS |     |     |  $  |  @  |  (  |  )  |  !  |
// | ESC |  4  |  5  |  6  |  0  |     |     |  ~  |  \  |  {  |  }  |  :  |
// | DEL |  7  |  8  |  9  |     |     |     |     |  #  |  <  |  >  |  ?  |
// |     |     |     |     |     |     |     |     |     |     |     |     |
            bindings = <
   	&bootloader  &kp N1  &kp N2  &kp N3  &kp CAPS  &trans  &trans  &kp DLLR   &kp AT    &kp LPAR  &kp RPAR  &kp EXCL 
   	&kp ESC      &kp N4  &kp N5  &kp N6  &kp N0    &trans  &trans  &kp TILDE  &kp BSLH  &kp LBRC  &kp RBRC  &kp COLON
   	&kp DEL      &kp N7  &kp N8  &kp N9  &trans    &trans  &trans  &trans     &kp HASH  &kp LT    &kp GT    &kp QMARK
   	&trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans    &trans    &trans    &trans
            >;
        };

        right_layer {
// |  "  |  [  |  ]  |  ^  |  _  |     |     | PREV | VDN  | VUP  | NEXT | MUTE |
// |  '  |  *  |  +  |  =  |  -  |     |     |  <   |  v   |  ^   |  >   | PLAY |
// |  `  |  &  |  |  |  %  |     |     |     | HOME | PGDN | PGUP | END  |      |
// |     |     |     |     |     |     |     |      |      |      |      |      |
            bindings = <
   	&kp DQT    &kp LBKT  &kp RBKT  &kp CARET  &kp UNDER  &trans  &trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &kp C_MUTE
   	&kp SQT    &kp STAR  &kp PLUS  &kp EQUAL  &kp MINUS  &trans  &trans  &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &kp C_PP  
   	&kp GRAVE  &kp AMPS  &kp PIPE  &kp PRCNT  &trans     &trans  &trans  &kp HOME    &kp PG_DN     &kp PG_UP     &kp END     &trans    
   	&trans     &trans    &trans    &trans     &trans     &trans  &trans  &trans      &trans        &trans        &trans      &trans
        	>;
        };

        left_mods_layer {
// |     |     |     |     |     |     |     |     |     |     |     |     |
// | ALT | CTL | GUI | SHF |     |     |     |     |     |     |     |     |
// |     |     |     |     |     |     |     |     |     |     |     |     |
// |     |     |     |     |     |     |     |     |     |     |     |     |
            bindings = <
   	&trans    &trans     &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   	&sk LALT  &sk LCTRL  &sk LGUI  &sk LSHFT &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   	&trans    &trans     &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
   	&trans    &trans     &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        	>;
        };
		
        right_mods_layer {
// |     |     |     |     |     |     |     |     |     |     |     |     |
// |     |     |     |     |     |     |     |     | SHF | GUI | CTL | ALT |
// |     |     |     |     |     |     |     |     |     |     |     |     |
// |     |     |     |     |     |     |     |     |     |     |     |     |
            bindings = <
   	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans    &trans    &trans
   	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &sk RSHFT  &sk RGUI  &sk RCTRL &sk RALT  
   	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans    &trans    &trans
   	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans    &trans    &trans
        	>;
        };

//         template_layer {
// // |     |     |     |     |     |     |     |     |     |     |     |     |
// // |     |     |     |     |     |     |     |     |     |     |     |     |
// // |     |     |     |     |     |     |     |     |     |     |     |     |
// // |     |     |     |     |     |     |     |     |     |     |     |     |
//             bindings = <
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//         	>;
//         };
	};
};
