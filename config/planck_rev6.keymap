#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define _DEF 0
#define _NUM 1
#define _NAV 2
#define _FN  3
#define _BLT 4
#define _LCK 5

#define ___ &trans

&lt { 
	quick_tap_ms = <200>; 
};

/ {
	behaviors {
		skl: sticky_key_lazy {
			compatible = "zmk,behavior-sticky-key";
			#binding-cells = <1>;
			bindings = <&kp>;
			release-after-ms = <1000>;
			lazy;
		};

		hskl: hold_sticky_key_lazy {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&kp>, <&skl>;
		};

		td_sf_cp: tap_dance_shift_caps {
			compatible = "zmk,behavior-tap-dance";
			#binding-cells = <0>;
			// TODO: behavior is not consistent, look into it
			// we might need to change quick-tap-ms, flavor or tapping-term-ms 
			// of the underlying hskl behavior. I'd bet on the first
			tapping-term-ms = <300>;
			bindings = <&hskl LSHFT LSHFT>, <&kp CAPS>;
		};
	};

    combos {
		compatible = "zmk,combos";

		// // left mod combos
		// left thumb 1, left home index
		combo_lt1_lhi {
			timeout-ms = <50>;
			key-positions = <39 15>;
			bindings = <&td_sf_cp>;
		};

		// left thumb 1, left home middle
		combo_lt1_lhm {
			timeout-ms = <50>;
			key-positions = <39 14>;
			bindings = <&hskl LGUI LGUI>;
		};

		// left thumb 1, left home ring
		combo_lt1_lhr {
			timeout-ms = <50>;
			key-positions = <39 13>;
			bindings = <&hskl LCTRL LCTRL>;
		};

		// left thumb 1, left home pinky
		combo_lt1_lhp {
			timeout-ms = <50>;
			key-positions = <39 12>;
			bindings = <&hskl LALT LALT>;
		};

		// // right mod combos
		// right thumb 1, right home index
		combo_rt1_rhi {
			timeout-ms = <50>;
			key-positions = <44 20>;
			bindings = <&td_sf_cp>;
		};

		// right thumb 1, right home middle
		combo_rt1_rhm {
			timeout-ms = <50>;
			key-positions = <44 21>;
			bindings = <&hskl LGUI LGUI>;
		};

		// right thumb 1, right home ring
		combo_rt1_rhr {
			timeout-ms = <50>;
			key-positions = <44 22>;
			bindings = <&hskl LCTRL LCTRL>;
		};

		// right thumb 1, right home pinky
		combo_rt1_rhp {
			timeout-ms = <50>;
			key-positions = <44 23>;
			bindings = <&hskl LALT LALT>;
		};

		// // layer combos
		// left thumb 0, left thumb 1
		combo_lt0_lt1 {
			timeout-ms = <50>;
			key-positions = <39 40>;
			bindings = <&mo _FN>;
		};

		// blt_c {
		// 	timeout-ms = <50>;
		// 	key-positions = <40 7>;
		// 	bindings = <&mo _BLT>;
		// };

		lock {
			timeout-ms = <50>;
			key-positions = <37 1 40 10>;
			bindings = <&tog _LCK>;
		};
	};

	keymap {
//        P     R     M     I     N             N     I     M     R     P
//      ______________________________        ______________________________  
//  U  | k0  |     |     |     |     | . | . | k7  |     |     |     |     |
//  H  | k12 |     |     |     |     | . | . | k19 |     |     |     |     |
//  L  |_k24_|_____|_____|     |     | . | . | k31 |     |_____|_____|_____|
//  T     .     .     .  |_k39_|_____| . | . |_k43_|_____|  .     .     .
//                          1     0             0     1
		compatible = "zmk,keymap";

            default_layer {
				display-name = "QWERTY";
//  ___________________________________     ____________________________________
// |     |  Q  |  W  |  E  |  R  |  T  | . |  Y   |  U  |  I  |  O  |  P  |     |
// |     |  A  |  S  |  D  |  F  |  G  | . |  H   |  J  |  K  |  L  |  ;  |     |
// |     |  Z  |  X  |  C  |  V  |  B  | . |  N   |  M  |  ,  |  .  |  /  |     |
//                   |     | TAB | SPC | . | BSPC | RET |     |
                bindings = <
   	&kp Q  &kp W  &kp E  &kp R    &kp T          ___  /**/ ___ &kp Y  &kp U  &kp I      &kp O    &kp P     
   	&kp A  &kp S  &kp D  &kp F    &kp G          ___  /**/ ___ &kp H  &kp J  &kp K      &kp L    &kp SEMI  
   	&kp Z  &kp X  &kp C  &kp V    &kp B          ___  /**/ ___ &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  
   	___    ___    ___    &kp TAB  &lt _NUM SPACE ___  /**/ ___ &lt _NAV BSPC  &kp RET  ___  ___  ___
                >;
            };
		
            number_layer {
				display-name = "NUM";
// -----------------------------------------------------------------------------------------
// |     |     |  1  |  2  |  3  | CAPS | . |  $  |  @  |  (  |  )  |  !  |     |
// |     | ESC |  4  |  5  |  6  |  0   | . |  ~  |  \  |  {  |  }  |  :  |     |
// |     | DEL |  7  |  8  |  9  |      | . |     |  #  |  <  |  >  |  ?  |     |
//                   |     |     |      | . |     |     |     |
                bindings = <
   	&trans   &kp N1  &kp N2  &kp N3  &kp CAPS  &trans  &trans    &kp DLLR   &kp AT    &kp LPAR  &kp RPAR  &kp EXCL   
   	&kp ESC  &kp N4  &kp N5  &kp N6  &kp N0    &trans  &trans    &kp TILDE  &kp BSLH  &kp LBRC  &kp RBRC  &kp COLON  
   	&kp DEL  &kp N7  &kp N8  &kp N9  &trans    &trans  &trans    &trans     &kp HASH  &kp LT    &kp GT    &kp QMARK  
   	&trans     &trans    &trans    &trans     &trans     &trans  &trans  &trans      &trans        &trans        &trans      &trans
                >;
            };

            navigation_layer {
				display-name = "NAV";
// -----------------------------------------------------------------------------------------
// |     |  "  |  [  |  ]  |  ^  |  _  | . | PREV | VDN  | VUP  | NEXT | MUTE |     |
// |     |  '  |  *  |  +  |  =  |  -  | . |  <   |  v   |  ^   |  >   | PLAY |     |
// |     |  `  |  &  |  |  |  %  |     | . | HOME | PGDN | PGUP | END  |      |     |
//                   |     |     |     | . |      |      |      |
                        bindings = <
   &kp DQT    &kp LBKT  &kp RBKT  &kp CARET  &kp UNDER  &trans  &trans    &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &kp C_MUTE
   &kp SQT    &kp STAR  &kp PLUS  &kp EQUAL  &kp MINUS  &trans  &trans    &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &kp C_PP  
   &kp GRAVE  &kp AMPS  &kp PIPE  &kp PRCNT  &trans     &trans  &trans    &kp HOME    &kp PG_DN     &kp PG_UP     &kp END     &trans    
   	&trans     &trans    &trans    &trans     &trans     &trans  &trans  &trans      &trans        &trans        &trans      &trans
                >;
            };


            function_layer {
				display-name = "FN";
//      ___________________________________     ___________________________________  
// k0  |     |     |     |     |     |     | . |     |     |     |     |     |     |
// k12 |     |     |     |     |     |     | . |     |     |     |     |     |     |
// k24 |     |     |     |     |     |     | . |     |     |     |     |     |     |
// k36                   |     |     |     | . |     |     |     |
                bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans /**/ &trans &trans  &kp F1  &kp F2   &kp F3   &kp F4 
   &trans  &trans  &trans  &trans  &trans  &trans /**/ &trans &trans  &kp F5  &kp F6   &kp F7   &kp F8 
   &trans  &trans  &trans  &trans  &trans  &trans /**/ &trans &trans  &kp F9  &kp F10  &kp F11  &kp F12
   	&trans     &trans    &trans    &trans     &trans     &trans  &trans  &trans      &trans        &trans        &trans      &trans
                >;
            };

            bluetooth_layer {
				display-name = "BLT";
// -----------------------------------------------------------------------------------------
// |     |     | BT0 | BT1 | BT2 |     | . |     |     |     |     |     |     |
// |     |     |     | PRV | NXT | CLR | . |     |     |     |     |     |     |
// |     |     |     |     |     |     | . |     |     |     |     |     |     |
//                   |     |     |     | . |     |     |     |
                bindings = <
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                >;
            };


            lock_layer {
				display-name = "LOCK";
// -----------------------------------------------------------------------------------------
// |     |     | BT0 | BT1 | BT2 |     | . |     |     |     |     |     |     |
// |     |     |     | PRV | NXT | CLR | . |     |     |     |     |     |     |
// |     |     |     |     |     |     | . |     |     |     |     |     |     |
//                   |     |     |     | . |     |     |     |
                bindings = <
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                >;
            };


//         template_layer {
// // |     |     |     |     |     |     |     |     |     |     |     |     |
// // |     |     |     |     |     |     |     |     |     |     |     |     |
// // |     |     |     |     |     |     |     |     |     |     |     |     |
// // |     |     |     |     |     |     |     |     |     |     |     |     |
//             bindings = <
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//    	&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//         	>;
//         };
	};
};
